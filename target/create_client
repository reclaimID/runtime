#!/bin/sh

CLIENT_URI=""
CLIENT_URI_SET=0
SITE_NAME=""
CLIENT_IDENTITY=""
CLIENT_DESCRIPTION="A re:claim Client"
REDIRECT_URI_PATH_EXTENSION="/login"

parse_opt() {
    while [[ $# -gt 0 ]]
    do
        key="$1"
        case $key in
            --gns)
                GNS_URI="$2"
                GNS_URI_SET=1
                shift
                shift
                ;;
            --dns)
                DNS_URI="$2"
                DNS_URI_SET=1
                shift
                shift
                ;;
            --ego)
                EGO="$2"
                shift
                shift
                ;;
            --ip4)
                IPV4="$2"
                shift
                shift
                ;;
            --description)
                CLIENT_DESCRIPTION="$2"
                shift
                shift
                ;;
            --path)
                REDIRECT_URI_PATH_EXTENSION="$2"
                shift
                shift
                ;;
            *)
                echo "Usage: tbd"
                exit 1
                shift
                ;;
        esac
    done

    if [ 1 = $DNS_URI_SET ]
    then
        if [ 0 = $EGO_SET ]
            echo "ego not set."
            exit 1
        fi
        CLIENT_IDENTITY=$EGO
    elif [ 1 = $GNS_URI_SET ]
        SITE_NAME=$(echo "$GNS_URI" | cut -d '.' -f 1)
        CLIENT_IDENTITY=$(echo "$GNS_URI" | cut -d '.' -f 2)
    else
        echo "No URIs given"
        exit 1
    fi

    # TODO: do sanitization on URI

}

register_client() {
    if gnunet-identity -C "$CLIENT_IDENTITY";
    then
        echo "create ego $CLIENT_IDENTITY"
    else
        echo "ego $CLIENT_IDENTITY was already created or an error occurred"
    fi
<<<<<<< HEAD
    if [ 1 = $GNS_URI_SET ]
    then
        openssl genrsa -des3 -passout pass:xxxx -out server.pass.key 2048
        openssl rsa -passin pass:xxxx -in server.pass.key -out /etc/reclaim/"$CLIENT_URI".local.key
        rm server.pass.key
        openssl req -new -key /etc/reclaim/"$CLIENT_URI".local.key -out server.csr \
            -subj "/C=DE/ST=Bavaria/L=Munich/O=Fraunhofer/OU=SAS/CN=$CLIENT_URI.local"
        openssl x509 -req -days 3650 -in server.csr -signkey /etc/reclaim/"$CLIENT_URI".local.key -out /etc/reclaim/"$CLIENT_URI".local.crt
        openssl x509 -in /etc/reclaim/"$CLIENT_URI".local.crt -out /etc/reclaim/"$CLIENT_URI".local.der -outform DER
        HEXCERT=`xxd -p /etc/reclaim/"$CLIENT_URI".local.der | tr -d '\n'`
        echo $HEXCERT
        BOXVALUE="6 443 52 3 0 0 $HEXCERT"
        gnunet-namestore -z "$CLIENT_IDENTITY" -a -n "$SITE_NAME" -t A -V "$IPV4" -e 1d -p
        gnunet-namestore -z "$CLIENT_IDENTITY" -a -n "$SITE_NAME" -t LEHO -V "$CLIENT_URI.local" -e 1d -p
        gnunet-namestore -z "$CLIENT_IDENTITY" -a -n "$SITE_NAME" -t BOX -V "$BOXVALUE" -e 1d -p


        RP_KEY=$(gnunet-identity -d | grep $CLIENT_IDENTITY | awk '{print $3}')
        REDIRECT_URI="https://$SITE_NAME.$RP_KEY$REDIRECT_URI_PATH_EXTENSION"
    else
        REDIRECT_URI="https://$DNS_URI$REDIRECT_URI_PATH_EXTENSION"
    fi
    gnunet-namestore -z "$CLIENT_IDENTITY" -a -n "+" -t "RECLAIM_OIDC_REDIRECT" -V "$REDIRECT_URI" -e 1d -p
    gnunet-namestore -z "$CLIENT_IDENTITY" -a -n "+" -t "RECLAIM_OIDC_CLIENT" -V "$CLIENT_DESCRIPTION" -e 1d -p
=======
    openssl genrsa -des3 -passout pass:xxxx -out server.pass.key 2048
    openssl rsa -passin pass:xxxx -in server.pass.key -out /etc/reclaim/"$CLIENT_URI".local.key
    rm server.pass.key
    openssl req -new -key /etc/reclaim/"$CLIENT_URI".local.key -out server.csr \
        -subj "/C=DE/ST=Bavaria/L=Munich/O=Fraunhofer/OU=SAS/CN=$CLIENT_URI.local"
    openssl x509 -req -days 3650 -in server.csr -signkey /etc/reclaim/"$CLIENT_URI".local.key -out /etc/reclaim/"$CLIENT_URI".local.crt
    openssl x509 -in /etc/reclaim/"$CLIENT_URI".local.crt -out /etc/reclaim/"$CLIENT_URI".local.der -outform DER
    HEXCERT=`xxd -p /etc/reclaim/"$CLIENT_URI".local.der | tr -d '\n'`
    echo $HEXCERT
    BOXVALUE="6 443 52 3 0 0 $HEXCERT"
    gnunet-namestore -z "$CLIENT_IDENTITY" -a -n "$SITE_NAME" -t A -V "$WEBSERVER_IP" -e 1d -p
    gnunet-namestore -z "$CLIENT_IDENTITY" -a -n "$SITE_NAME" -t LEHO -V "$CLIENT_URI.local" -e 1d -p
    gnunet-namestore -z "$CLIENT_IDENTITY" -a -n "$SITE_NAME" -t BOX -V "$BOXVALUE" -e 1d -p

    RP_KEY=$(gnunet-identity -d | grep reclaim | awk '{print $3}')
    REDIRECT_URI="https://$SITE_NAME.$RP_KEY$REDIRECT_URI_PATH_EXTENSION"
    gnunet-namestore -z "$CLIENT_IDENTITY" -a -n "@" -t "RECLAIM_OIDC_REDIRECT" -V "$REDIRECT_URI" -e 1d -p
    gnunet-namestore -z "$CLIENT_IDENTITY" -a -n "@" -t "RECLAIM_OIDC_CLIENT" -V "$CLIENT_DESCRIPTION" -e 1d -p
>>>>>>> bd9d2c140d2381a4b4503a0af687025a4fa25e09

    echo "$CLIENT_URI,$REDIRECT_URI" >> /etc/reclaim/clients.csv

    # restart services
    gnunet-arm -k rest
    gnunet-arm -i rest
    gnunet-arm -k reclaim
    gnunet-arm -i reclaim
    gnunet-arm -k gns-proxy
    gnunet-arm -i gns-proxy

    echo "registering client uri: $CLIENT_URI"
    echo "secret: $(gnunet-config -s reclaim-rest-plugin -o PSW)"
    echo "grant_type: authorization_code"
    echo "redirect_uri $REDIRECT_URI"

    echo -e "\nEndpoints:"
    echo "https://api.reclaim/oidc/authorize"
    echo "https://api.reclaim/oidc/token"
    echo -e "https://api.reclaim/oidc/userinfo\n"

    echo "JWT tokens are signed (HS512) using the secret: $(gnunet-config -s reclaim-rest-plugin -o JWT_SECRET)"
}

parse_opt "$@"

register_client

exit 0


